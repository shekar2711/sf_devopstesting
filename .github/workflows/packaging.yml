# Unique name for this workflow
name: Packaging

# Workflow starts when receiving custom event sent by CI workflow
on:
    workflow_dispatch:
    repository_dispatch:
        types: [start-packaging]

# Jobs to be executed
jobs:
    release-package-version:
        runs-on: trailheadapps-Ubuntu
        steps:
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  npm install @salesforce/cli --location=global
                  nodeInstallPath=$(npm config get prefix)
                  echo "$nodeInstallPath/bin" >> $GITHUB_PATH
                  sf --version

            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.client_payload.ref }}

            # Store secret for dev hub
            - name: 'Populate auth file with DEVHUB_SFDX_URL secret'
              shell: bash
              run: |
                  echo ${{ secrets.DEVHUB_SFDX_URL }} > ./DEVHUB_SFDX_URL.txt
                  secretFileSize=$(wc -c "./DEVHUB_SFDX_URL.txt" | awk '{print $1}')
                  if [ $secretFileSize == 1 ]; then
                      echo "Missing DEVHUB_SFDX_URL secret. Is this workflow running on a fork?";
                      exit 1;
                  fi

            # Authenticate dev hub
            - name: 'Authenticate Dev Hub'
              run: sf org login sfdx-url -f ./DEVHUB_SFDX_URL.txt -a devhub -d

            # Remove auth file
            - name: 'Remove auth file'
              run: rm -f ./DEVHUB_SFDX_URL.txt

            # Modify local metadata for packaging
            - name: 'Modify local metadata for packaging'
              run: |
                  cp -rpv cc-service-app/main/default/corsWhitelistOrigins cc-base-app/main/default/
                  cp -rpv cc-service-app/main/default/cspTrustedSites cc-base-app/main/default/
                  cp -rpv cc-service-app/main/default/digitalExperienceConfigs/coral* cc-base-app/main/default/digitalExperienceConfigs/
                  cp -rpv cc-service-app/main/default/digitalExperiences/site/coral* cc-base-app/main/default/digitalExperiences/site/
                  cp -rpv cc-service-app/main/default/flows/* cc-base-app/main/default/flows/
                  cp -rpv cc-service-app/main/default/navigationMenus/*coral* cc-base-app/main/default/navigationMenus/
                  cp -rpv cc-service-app/main/default/networks/coral* cc-base-app/main/default/networks/
                  cp -rpv cc-service-app/main/default/sites/coral* cc-base-app/main/default/sites/
                  cp -rpv cc-service-app/main/default/staticresources cc-base-app/main/default/
                  rm -f cc-base-app/main/default/flows/Route_to_Agent.flow-meta.xml
                  jq 'walk(if type == "object" and .id == "e78ba173-4372-48d8-86bf-6e4ffbc14926" then empty else . end)' cc-base-app/main/default/digitalExperiences/site/coral_cloud1/sfdc_cms__view/home/content.json > cc-base-app/main/default/digitalExperiences/site/coral_cloud1/sfdc_cms__view/home/content.json
                  sed '/<actionCalls>/,/<\/actionCalls>/d' cc-base-app/main/default/flows/PersonalizedSchedule.flow-meta.xml > cc-base-app/main/default/flows/PersonalizedSchedule_Temp.flow-meta.xml && mv cc-base-app/main/default/flows/PersonalizedSchedule_Temp.flow-meta.xml cc-base-app/main/default/flows/PersonalizedSchedule.flow-meta.xml
            # Bump package minor version
            - name: 'Bump package minor version'
              run: node bin/bump-package-minor-version.js

            # Create package version and extract its id
            - name: 'Create package version'
              id: createPackageVersion
              run: |
                  set +e
                  json=$(sf package version create -p "Coral Cloud - Base" -c -x -w 20 --json)
                  echo $json
                  status=$(echo $json | jq '.status')
                  if [ $status == "0" ]; then
                      packageVersionId=$(echo $json | jq -r '.result.SubscriberPackageVersionId')
                      echo "packageVersionId=$packageVersionId" >> $GITHUB_OUTPUT
                  else
                      echo "Failed to create package version"
                  fi
                  exit $status

            # Wait for package replication
            - name: 'Wait for package replication (360s)'
              run: sleep 360s

            # Create scratch org
            - name: 'Create scratch org'
              run: sf org create scratch -f config/cc-base-project-scratch-def.json -a scratch-org -d -y 1

            # Install new package in scratch org
            - name: 'Install new package version in scratch org'
              run: sf package install -p ${{ steps.createPackageVersion.outputs.packageVersionId }} -w 10 -o scratch-org -r

            # Update package install link in readme
            - name: 'Update package install link in readme'
              run: |
                  packageVersionId="${{ steps.createPackageVersion.outputs.packageVersionId }}"
                  packageLinkRegex="https:\/\/login\.salesforce\.com\/packaging\/installPackage\.apexp\?p0=[a-zA-ZA-ZA-Z0-9]{18}"
                  newPackageLink="https://login.salesforce.com/packaging/installPackage.apexp?p0=${packageVersionId}"
                  sed -E -i "s,${packageLinkRegex},${newPackageLink}," README.md

            # Promote package version
            - name: 'Promote package version'
              run: sf package version promote -p ${{ steps.createPackageVersion.outputs.packageVersionId }} -n

            # Create PR for new package version
            - name: 'Create PR for new package version'
              id: create-pr
              uses: peter-evans/create-pull-request@v6
              with:
                  title: 'Released new package version ${{ steps.createPackageVersion.outputs.packageVersionId }}'
                  body: 'Released new package version ${{ steps.createPackageVersion.outputs.packageVersionId }}'
                  author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
                  commit-message: 'Released new package version ${{ steps.createPackageVersion.outputs.packageVersionId }}'
                  branch: 'auto/release-package-version'
                  token: ${{ secrets.BOT_ACCESS_TOKEN }}

            # Wait for PR to stabilize (auto skip CI)
            - name: 'Wait for PR to stabilize (60s)'
              run: sleep 60s

            # Approve and mark PR for auto merge
            - name: 'Approve and mark PR for auto merge'
              continue-on-error: true
              run: |
                  gh pr review --approve "$PR_NUMBER"
                  gh pr merge --auto --squash "$PR_NUMBER"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  PR_NUMBER: ${{ steps.create-pr.outputs.pull-request-number }}

            # Housekeeping
            - name: 'Delete scratch org'
              if: always()
              run: sf org delete scratch -p -o scratch-org
